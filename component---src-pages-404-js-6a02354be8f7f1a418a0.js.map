{"version":3,"sources":["webpack:///./src/components/layout.tsx","webpack:///./src/components/seo.tsx","webpack:///./src/pages/404.js"],"names":["Layout","children","query","render","site","siteMetadata","title","author","description","className","SEO","lang","meta","keywords","detailsQuery","data","metaDescription","htmlAttributes","titleTemplate","name","content","property","concat","length","join","defaultProps","NotFoundPage"],"mappings":"6FAAA,iFAqCeA,IA7BA,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACb,kBAAC,cAAD,CACEC,MAAK,aAWLC,OAAQ,oBACNC,KACEC,aAAgBC,EAFZ,EAEYA,MAAOC,EAFnB,EAEmBA,OAAQC,EAF3B,EAE2BA,YAF3B,OAKN,yBAAKC,UAAU,aACb,kBAAC,SAAD,KACE,+BAAQH,IAEV,kBAAC,IAAD,CAAQC,OAAQA,EAAQC,YAAaA,IACrC,0BAAMC,UAAU,QAAQR,S,+GC1BhC,SAASS,EAAT,GAA2D,IAA5CF,EAA4C,EAA5CA,YAAaG,EAA+B,EAA/BA,KAAMC,EAAyB,EAAzBA,KAAMC,EAAmB,EAAnBA,SAAUP,EAAS,EAATA,MAChD,OACE,kBAAC,cAAD,CACEJ,MAAOY,EACPX,OAAQ,SAAAY,GACN,IAAMC,EACJR,GAAeO,EAAKX,KAAKC,aAAaG,YACxC,OACE,kBAAC,IAAD,CACES,eAAgB,CACdN,QAEFL,MAAOA,EACPY,cAAa,QAAUH,EAAKX,KAAKC,aAAaC,MAC9CM,KAAM,CACJ,CACEO,KAAM,cACNC,QAASJ,GAEX,CACEK,SAAU,WACVD,QAASd,GAEX,CACEe,SAAU,iBACVD,QAASJ,GAEX,CACEK,SAAU,UACVD,QAAS,WAEX,CACED,KAAM,eACNC,QAAS,WAEX,CACED,KAAM,kBACNC,QAASL,EAAKX,KAAKC,aAAaE,QAElC,CACEY,KAAM,gBACNC,QAASd,GAEX,CACEa,KAAM,sBACNC,QAASJ,IAGVM,OACCT,EAASU,OAAS,EACd,CACEJ,KAAM,WACNC,QAASP,EAASW,KAAT,OAEX,IAELF,OAAOV,QAQtBF,EAAIe,aAAe,CACjBd,KAAM,KACNC,KAAM,GACNC,SAAU,IAWGH,QAETI,EAAe,aCtENY,UAVM,SAAC,GAAa,EAAXX,KACvB,OACC,kBAAC,IAAD,KACC,kBAAC,EAAD,CAAKT,MAAM,mBACX,yCACA","file":"component---src-pages-404-js-6a02354be8f7f1a418a0.js","sourcesContent":["import React from \"react\"\nimport { StaticQuery, graphql } from \"gatsby\"\nimport { Helmet } from \"react-helmet\"\n\nimport Header from \"./header/Header\"\nimport \"../styles/base.scss\"\nimport \"./Layout.scss\"\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n            author\n            description\n          }\n        }\n      }\n    `}\n    render={({\n      site: {\n        siteMetadata: { title, author, description },\n      },\n    }) => (\n      <div className=\"container\">\n        <Helmet>\n          <title>{title}</title>\n        </Helmet>\n        <Header author={author} description={description} />\n        <main className=\"main\">{children}</main>\n      </div>\n    )}\n  />\n)\n\nexport default Layout\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { StaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaDescription =\n          description || data.site.siteMetadata.description\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang,\n            }}\n            title={title}\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n            meta={[\n              {\n                name: `description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:title`,\n                content: title,\n              },\n              {\n                property: `og:description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:type`,\n                content: `website`,\n              },\n              {\n                name: `twitter:card`,\n                content: `summary`,\n              },\n              {\n                name: `twitter:creator`,\n                content: data.site.siteMetadata.author,\n              },\n              {\n                name: `twitter:title`,\n                content: title,\n              },\n              {\n                name: `twitter:description`,\n                content: metaDescription,\n              },\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                      name: `keywords`,\n                      content: keywords.join(`, `),\n                    }\n                  : []\n              )\n              .concat(meta)}\n          />\n        )\n      }}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`\n","import React from \"react\";\n\nimport Layout from \"../components/layout\";\nimport SEO from \"../components/seo\";\n\nconst NotFoundPage = ({ data }) => {\n\treturn (\n\t\t<Layout>\n\t\t\t<SEO title=\"404: Not found\" />\n\t\t\t<h1>NOT FOUND</h1>\n\t\t\t<p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n\t\t</Layout>\n\t);\n};\n\nexport default NotFoundPage;\n"],"sourceRoot":""}