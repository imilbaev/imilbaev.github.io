{"version":3,"sources":["webpack:///./src/components/layout.tsx","webpack:///./src/components/seo.tsx","webpack:///./src/pages/404.js"],"names":["Layout","children","query","render","site","siteMetadata","title","author","description","className","SEO","lang","meta","keywords","detailsQuery","data","metaDescription","htmlAttributes","titleTemplate","name","content","property","concat","length","join","defaultProps","NotFoundPage"],"mappings":"6FAAA,iFAqCeA,IA7BA,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACb,kBAAC,cAAD,CACEC,MAAK,aAWLC,OAAQ,oBACNC,KACEC,aAAgBC,EAFZ,EAEYA,MAAOC,EAFnB,EAEmBA,OAAQC,EAF3B,EAE2BA,YAF3B,OAKN,yBAAKC,UAAU,aACb,kBAAC,SAAD,KACE,+BAAQH,IAEV,kBAAC,IAAD,CAAQC,OAAQA,EAAQC,YAAaA,IACrC,0BAAMC,UAAU,QAAQR,S,+GC1BhC,SAASS,EAAT,GAA2D,IAA5CF,EAA4C,EAA5CA,YAAaG,EAA+B,EAA/BA,KAAMC,EAAyB,EAAzBA,KAAMC,EAAmB,EAAnBA,SAAUP,EAAS,EAATA,MAChD,OACE,kBAAC,cAAD,CACEJ,MAAOY,EACPX,OAAQ,SAAAY,GACN,IAAMC,EACJR,GAAeO,EAAKX,KAAKC,aAAaG,YACxC,OACE,kBAAC,IAAD,CACES,eAAgB,CACdN,QAEFL,MAAOA,EACPY,cAAa,QAAUH,EAAKX,KAAKC,aAAaC,MAC9CM,KAAM,CACJ,CACEO,KAAM,cACNC,QAASJ,GAEX,CACEK,SAAU,WACVD,QAASd,GAEX,CACEe,SAAU,iBACVD,QAASJ,GAEX,CACEK,SAAU,UACVD,QAAS,WAEX,CACED,KAAM,eACNC,QAAS,WAEX,CACED,KAAM,kBACNC,QAASL,EAAKX,KAAKC,aAAaE,QAElC,CACEY,KAAM,gBACNC,QAASd,GAEX,CACEa,KAAM,sBACNC,QAASJ,IAGVM,OACCT,EAASU,OAAS,EACd,CACEJ,KAAM,WACNC,QAASP,EAASW,KAAT,OAEX,IAELF,OAAOV,QAQtBF,EAAIe,aAAe,CACjBd,KAAM,KACNC,KAAM,GACNC,SAAU,IAWGH,QAETI,EAAe,aCtENY,UAVM,SAAC,GAAa,EAAXX,KACvB,OACC,kBAAC,IAAD,KACC,kBAAC,EAAD,CAAKT,MAAM,mBACX,yCACA","file":"component---src-pages-404-js-17e37959f9a2c982926f.js","sourcesContent":["import React from \"react\"\r\nimport { StaticQuery, graphql } from \"gatsby\"\r\nimport { Helmet } from \"react-helmet\"\r\n\r\nimport Header from \"./header/Header\"\r\nimport \"../styles/base.scss\"\r\nimport \"./Layout.scss\"\r\n\r\nconst Layout = ({ children }) => (\r\n  <StaticQuery\r\n    query={graphql`\r\n      query SiteTitleQuery {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n            author\r\n            description\r\n          }\r\n        }\r\n      }\r\n    `}\r\n    render={({\r\n      site: {\r\n        siteMetadata: { title, author, description },\r\n      },\r\n    }) => (\r\n      <div className=\"container\">\r\n        <Helmet>\r\n          <title>{title}</title>\r\n        </Helmet>\r\n        <Header author={author} description={description} />\r\n        <main className=\"main\">{children}</main>\r\n      </div>\r\n    )}\r\n  />\r\n)\r\n\r\nexport default Layout\r\n","import React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport Helmet from \"react-helmet\"\r\nimport { StaticQuery, graphql } from \"gatsby\"\r\n\r\nfunction SEO({ description, lang, meta, keywords, title }) {\r\n  return (\r\n    <StaticQuery\r\n      query={detailsQuery}\r\n      render={data => {\r\n        const metaDescription =\r\n          description || data.site.siteMetadata.description\r\n        return (\r\n          <Helmet\r\n            htmlAttributes={{\r\n              lang,\r\n            }}\r\n            title={title}\r\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\r\n            meta={[\r\n              {\r\n                name: `description`,\r\n                content: metaDescription,\r\n              },\r\n              {\r\n                property: `og:title`,\r\n                content: title,\r\n              },\r\n              {\r\n                property: `og:description`,\r\n                content: metaDescription,\r\n              },\r\n              {\r\n                property: `og:type`,\r\n                content: `website`,\r\n              },\r\n              {\r\n                name: `twitter:card`,\r\n                content: `summary`,\r\n              },\r\n              {\r\n                name: `twitter:creator`,\r\n                content: data.site.siteMetadata.author,\r\n              },\r\n              {\r\n                name: `twitter:title`,\r\n                content: title,\r\n              },\r\n              {\r\n                name: `twitter:description`,\r\n                content: metaDescription,\r\n              },\r\n            ]\r\n              .concat(\r\n                keywords.length > 0\r\n                  ? {\r\n                      name: `keywords`,\r\n                      content: keywords.join(`, `),\r\n                    }\r\n                  : []\r\n              )\r\n              .concat(meta)}\r\n          />\r\n        )\r\n      }}\r\n    />\r\n  )\r\n}\r\n\r\nSEO.defaultProps = {\r\n  lang: `en`,\r\n  meta: [],\r\n  keywords: [],\r\n}\r\n\r\nSEO.propTypes = {\r\n  description: PropTypes.string,\r\n  lang: PropTypes.string,\r\n  meta: PropTypes.array,\r\n  keywords: PropTypes.arrayOf(PropTypes.string),\r\n  title: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default SEO\r\n\r\nconst detailsQuery = graphql`\r\n  query DefaultSEOQuery {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n        description\r\n        author\r\n      }\r\n    }\r\n  }\r\n`\r\n","import React from \"react\";\r\n\r\nimport Layout from \"../components/layout\";\r\nimport SEO from \"../components/seo\";\r\n\r\nconst NotFoundPage = ({ data }) => {\r\n\treturn (\r\n\t\t<Layout>\r\n\t\t\t<SEO title=\"404: Not found\" />\r\n\t\t\t<h1>NOT FOUND</h1>\r\n\t\t\t<p>You just hit a route that doesn&#39;t exist... the sadness.</p>\r\n\t\t</Layout>\r\n\t);\r\n};\r\n\r\nexport default NotFoundPage;\r\n"],"sourceRoot":""}